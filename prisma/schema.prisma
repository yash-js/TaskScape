datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Board {
  id            String    @id @default(uuid())
  title         String
  orgId         String
  imageId       String
  imageThumbUrl String    @db.Text
  imageFullUrl  String    @db.Text
  imageUserName String    @db.Text
  imageLinkHTML String    @db.Text

  lists         List[]

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([orgId])
  @@index([createdAt])
}


model List{
  id          String    @id @default(uuid())
  title       String
  order       Int

  boardId     String
  board       Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)

  cards       Card[]

  @@index([boardId])
  @@index([boardId, order])

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  }


model Card{
  id          String    @id @default(uuid())
  title       String
  order       Int
  description String?   @db.Text

  listId      String
  list        List     @relation(fields: [listId], references: [id], onDelete: Cascade)

  @@index([listId])
  @@index([listId, order])

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum ACTION{
  CREATE
  UPDATE
  DELETE
}

enum ENTITY_TYPE{
  BOARD
  LIST
  CARD
}

model AuditLog{
  id          String       @id @default(uuid())
  orgId       String
  action      ACTION
  entityId    String
  entityType  ENTITY_TYPE
  entityTitle String
  userId      String
  userImage   String       @db.Text
  userName    String       @db.Text

  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([orgId])
  @@index([entityId])
  @@index([createdAt])
}

model OrgLimit{
  id        String    @id @default(uuid())
  orgId     String    @unique
  count     Int       @default(0)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}


model OrgSubscription{
  id                     String                                           @id @default(uuid())
  orgId                  String                                           @unique
  stripeCustomerId       String?   @map(name:"stripe_customer_id")        @unique
  stripeSubscriptionId   String?   @map(name:"stripe_subscription_id")    @unique
  stripePriceId          String?   @map(name:"stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name:"stripe_current_period_end")

}
